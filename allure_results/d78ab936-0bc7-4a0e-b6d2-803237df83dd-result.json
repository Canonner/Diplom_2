{"name": "Test of getting last 50 user orders with authorization", "status": "failed", "statusDetails": {"message": "AssertionError: Number of last user orders in response is not 50\nassert 51 == 50\n +  where 51 = len([{'_id': '65699e469ed280001b38d166', 'createdAt': '2023-12-01T08:50:14.775Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6...': '2023-12-01T08:50:21.134Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6d'], 'name': 'Флюоресцентный бургер', ...}, ...])", "trace": "self = <tests.test_get_user_orders.TestGetUserOrders object at 0x0000026D4943FB50>\ncreate_user = (<Response [200]>, 'ncldakeoby@ya.ru', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Njk5ZTQ1OWVkMjgwMDAxYjM4ZDE2NCIsImlhdCI6MTcwMTQyMDYxMywiZXhwIjoxNzAxNDIxODEzfQ.wx0cEm7mhPIGjm_zBU6NRRb01yBzu9ye3Sq1aiJfHlM')\ncreate_fifty_one_orders = None\n\n    @allure.title('Test of getting last 50 user orders with authorization')\n    @allure.description('Test of the endpoint \"Получение заказов конкретного пользователя\" GET /api/orders.'\n                        'Checks that response contains last 50 user orders'\n                        'that response code is 200 '\n                        'and that request returns \"success\": true')\n    def test_get_last_fifty_user_orders_with_authorization(self, create_user, create_fifty_one_orders):\n        headers = {'Authorization': f'{create_user[2]}'}\n        response = requests.get(CommonData.get_user_orders, headers=headers)\n        assert response.status_code == 200, f'Instead of code 200 received code {response.status_code}'\n        assert response.json().get('success') is True, 'Field \"success\" is not True in the response body'\n        orders = response.json().get('orders')\n>       assert len(orders) == 50, 'Number of last user orders in response is not 50'\nE       AssertionError: Number of last user orders in response is not 50\nE       assert 51 == 50\nE        +  where 51 = len([{'_id': '65699e469ed280001b38d166', 'createdAt': '2023-12-01T08:50:14.775Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6...': '2023-12-01T08:50:21.134Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6d'], 'name': 'Флюоресцентный бургер', ...}, ...])\n\ntests\\test_get_user_orders.py:45: AssertionError"}, "description": "Test of the endpoint \"Получение заказов конкретного пользователя\" GET /api/orders.Checks that response contains last 50 user ordersthat response code is 200 and that request returns \"success\": true", "start": 1701420700867, "stop": 1701420701413, "uuid": "d2031505-f440-41a2-a738-c77fbd93e635", "historyId": "ed6d44b50521c3d552dd6a2008830447", "testCaseId": "ed6d44b50521c3d552dd6a2008830447", "fullName": "tests.test_get_user_orders.TestGetUserOrders#test_get_last_fifty_user_orders_with_authorization", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_user_orders"}, {"name": "subSuite", "value": "TestGetUserOrders"}, {"name": "host", "value": "Airforce3"}, {"name": "thread", "value": "10084-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_user_orders"}]}