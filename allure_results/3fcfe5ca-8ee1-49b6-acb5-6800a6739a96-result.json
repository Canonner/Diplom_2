{"name": "Test of getting no more that 50 last user orders with authorization", "status": "failed", "statusDetails": {"message": "AssertionError: Number of last user orders in response is not 50\nassert 51 == 50\n +  where 51 = len([{'_id': '656df2359ed280001b38fbd0', 'createdAt': '2023-12-04T15:37:25.177Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6...': '2023-12-04T15:37:30.005Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6d'], 'name': 'Флюоресцентный бургер', ...}, ...])", "trace": "self = <tests.test_get_user_orders.TestGetUserOrders object at 0x00000240E7359050>\ncreate_user = (<Response [200]>, 'rzflojzhqc@ya.ru', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NmRmMjM0OWVkMjgwMDAxYjM4ZmJjZSIsImlhdCI6MTcwMTcwNDI0NCwiZXhwIjoxNzAxNzA1NDQ0fQ.pbIYPqrtGJb6Q2RI0pLV_huU_rk_Qsk91xPkriw2rqY')\ncreate_n_orders = None, orders_to_receive = 50\n\n    @allure.title('Test of getting no more that 50 last user orders with authorization')\n    @allure.description('Test of the endpoint \"Получение заказов конкретного пользователя\" GET /api/orders.'\n                        'Parametrized test that checks that response contains no more than 50 last user orders'\n                        'that response code is 200 '\n                        'and that request returns \"success\": true')\n    @pytest.mark.parametrize('create_n_orders, orders_to_receive', [\n        (49, 49),\n        (50, 50),\n        (51, 50)\n    ], indirect=['create_n_orders'])\n    def test_get_no_more_than_fifty_last_user_orders_with_authorization(self, create_user,\n                                                                        create_n_orders, orders_to_receive):\n        headers = {'Authorization': f'{create_user[2]}'}\n        response = requests.get(Urls.get_user_orders, headers=headers)\n        assert response.status_code == 200, f'Instead of code 200 received code {response.status_code}'\n        assert response.json().get('success') is True, 'Field \"success\" is not True in the response body'\n        orders = response.json().get('orders')\n>       assert len(orders) == orders_to_receive, f'Number of last user orders in response is not {orders_to_receive}'\nE       AssertionError: Number of last user orders in response is not 50\nE       assert 51 == 50\nE        +  where 51 = len([{'_id': '656df2359ed280001b38fbd0', 'createdAt': '2023-12-04T15:37:25.177Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6...': '2023-12-04T15:37:30.005Z', 'ingredients': ['61c0c5a71d1f82001bdaaa6d'], 'name': 'Флюоресцентный бургер', ...}, ...])\n\ntests\\test_get_user_orders.py:48: AssertionError"}, "description": "Test of the endpoint \"Получение заказов конкретного пользователя\" GET /api/orders.Parametrized test that checks that response contains no more than 50 last user ordersthat response code is 200 and that request returns \"success\": true", "parameters": [{"name": "create_n_orders", "value": "51"}, {"name": "orders_to_receive", "value": "50"}], "start": 1701704329423, "stop": 1701704329992, "uuid": "4e74e1dc-bee1-4937-9acc-4b2e63726c0a", "historyId": "1976f98bbffaa0a90a02f505bd386971", "testCaseId": "6071cc75ceab92ebdc75e15cadc51b44", "fullName": "tests.test_get_user_orders.TestGetUserOrders#test_get_no_more_than_fifty_last_user_orders_with_authorization", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_user_orders"}, {"name": "subSuite", "value": "TestGetUserOrders"}, {"name": "host", "value": "Airforce3"}, {"name": "thread", "value": "9092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_user_orders"}]}